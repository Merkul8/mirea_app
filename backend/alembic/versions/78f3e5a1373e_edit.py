"""edit

Revision ID: 78f3e5a1373e
Revises: 
Create Date: 2025-04-25 20:47:34.775934

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '78f3e5a1373e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('institute',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('public_service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('service_type', postgresql.ENUM('K1', 'K2', 'K3', 'other', name='service_type'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('departament',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('institute_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['institute_id'], ['institute.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('citations', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('public_service_id', sa.Integer(), nullable=True),
    sa.Column('public_service', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('authors', sa.String(), nullable=True),
    sa.Column('publication_year', sa.String(), nullable=True),
    sa.Column('author_type', postgresql.ENUM('collaborator', 'author', name='author_type'), nullable=False),
    sa.ForeignKeyConstraint(['public_service_id'], ['public_service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_mirea',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('patronymic', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('elibrary_id', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('departament_id', sa.Integer(), nullable=True),
    sa.Column('is_active_email', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['departament_id'], ['departament.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activate_code',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_mirea.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activate_code_user_id'), 'activate_code', ['user_id'], unique=True)
    op.create_table('employee_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('publication_count', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_mirea.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=True),
    sa.Column('public_service_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['public_service_id'], ['user_mirea.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_publication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('publication_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['publication_id'], ['publication.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_mirea.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_mirea.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_role_role_id'), 'user_role', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_role_user_id'), 'user_role', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_role_user_id'), table_name='user_role')
    op.drop_index(op.f('ix_user_role_role_id'), table_name='user_role')
    op.drop_table('user_role')
    op.drop_table('user_publication')
    op.drop_table('report')
    op.drop_table('employee_metrics')
    op.drop_index(op.f('ix_activate_code_user_id'), table_name='activate_code')
    op.drop_table('activate_code')
    op.drop_table('user_mirea')
    op.drop_table('publication')
    op.drop_table('departament')
    op.drop_table('role')
    op.drop_table('public_service')
    op.drop_table('institute')
    # ### end Alembic commands ###
